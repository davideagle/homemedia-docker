version: '3.4'

x-lsio-env: &lsio_env
  PUID: ${PUID}
  PGID: ${PGID}
  TZ: ${TZ}
x-default-traefik-no-auth: &default_traefik_no_auth
  traefik.enable: 'true'
  traefik.https.frontend.headers.SSLRedirect: 'false'
  traefik.https.frontend.headers.STSSeconds: '315360000'
  traefik.https.frontend.headers.browserXSSFilter: 'true'
  traefik.https.frontend.headers.contentTypeNosniff: 'true'
  traefik.https.frontend.headers.forceSTSHeader: 'true'
  traefik.https.frontend.headers.STSIncludeSubdomains: 'true'
  traefik.https.frontend.headers.STSPreload: 'true'
  traefik.https.frontend.headers.frameDeny: 'false'
x-default-traefik-opts: &default_traefik_opts
  <<: *default_traefik_no_auth
  traefik.https.frontend.auth.forward.address: 'http://organizr/api/?v1/auth&group=1'

services:
  pia:
    image: qmcgaw/private-internet-access:latest
    container_name: pia
    cap_add:
      - NET_ADMIN
    devices:
      - /dev/net/tun
    restart: unless-stopped
    ports:
      - 8112:8112
    environment:
      - USER=${PIA_USER}
      - PASSWORD=${PIA_PASS}
      - PROTOCOL=udp
      - ENCRYPTION=strong
      - REGION=${PIA_REGION}

  hydra2:
    image: linuxserver/hydra2:latest
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /home/ubuntu/config/hydra2:/config
      - ${ROOT}/usenet:/data/usenet
    ports:
      - 5076:5076
    restart: unless-stopped
    labels:
      <<: *default_traefik_opts
      traefik.backend: 'hydra2'
      traefik.port: '5076'
      traefik.local.frontend.rule: 'Host:hydra2.${LOCAL_DOMAIN:-localhost}'
      traefik.https.frontend.rule: 'Host:hydra2.${DOMAIN:-default}'

  ombi:
    image: linuxserver/ombi:latest
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /home/ubuntu/config/ombi:/config
    ports:
      - 3579:3579
    restart: unless-stopped
    labels:
      <<: *default_traefik_no_auth
      traefik.backend: 'ombi'
      traefik.port: '3579'
      traefik.local.frontend.rule: 'Host:ombi.${LOCAL_DOMAIN:-localhost}'
      traefik.https.frontend.rule: 'Host:ombi.${DOMAIN:-default}'

  deluge:
    image: linuxserver/deluge
    network_mode: service:pia
    depends_on:
      - pia
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - UMASK_SET=022
      - TZ=${TZ}
      - LANGUGAE=${LANGUGAE}
      - DELUGE_LOGLEVEL=info
    volumes:
      - /home/ubuntu/config/deluge:/config
      - /home/ubuntu/torrents:/data/torrents
    restart: unless-stopped
    labels:
      <<: *default_traefik_opts
      traefik.port: '8112'
      traefik.local.frontend.rule: 'Host:deluge.${LOCAL_DOMAIN:-localhost}'
      traefik.https.frontend.rule: 'Host:deluge.${DOMAIN:-default}'

  jackett:
    image: linuxserver/jackett:latest
    restart: unless-stopped
    ports:
      - 9117:9117
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - /home/ubuntu/torrents/blackhole:/blackhole # place where to put .torrent files for manual download
      - /home/ubuntu/config/jackett:/config # config files
    labels:
      <<: *default_traefik_opts
      traefik.backend: 'jackett'
      traefik.port: '9117'
      traefik.local.frontend.rule: 'Host:jackett.${LOCAL_DOMAIN:-localhost}'
      traefik.https.frontend.rule: 'Host:jackett.${DOMAIN:-default}'

  sabnzbd:
    image: linuxserver/sabnzbd:latest
    restart: unless-stopped
    ports:
      - 8081:8080
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - ${ROOT}/usenet:/data/usenet # download folder
      - /home/ubuntu/config/sabnzbd:/config # config files
    labels:
      <<: *default_traefik_opts
      traefik.backend: 'sabnzbd'
      traefik.port: '8080'
      traefik.local.frontend.rule: 'Host:sabnzbd.${LOCAL_DOMAIN:-localhost}'
      traefik.https.frontend.rule: 'Host:sabnzbd.${DOMAIN:-default}'

  sonarr:
    image: linuxserver/sonarr:preview
    restart: unless-stopped
    ports:
      - 8989:8989
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${ROOT}:/data
      - /home/ubuntu/data/torrents/:/data/torrents
      - /home/ubuntu/config/sonarr:/config # config files
    labels:
      <<: *default_traefik_opts
      traefik.backend: 'sonarr'
      traefik.port: '8989'
      traefik.local.frontend.rule: 'Host:sonarr.${LOCAL_DOMAIN:-localhost}'
      traefik.https.frontend.rule: 'Host:sonarr.${DOMAIN:-default}'
  radarr:
    image: linuxserver/radarr:latest
    restart: unless-stopped
    ports:
      - 7878:7878
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /etc/localtime:/etc/localtime:ro
      - ${ROOT}:/data
      - /home/ubuntu/config/radarr:/config # config files
    labels:
      <<: *default_traefik_opts
      traefik.backend: 'radarr'
      traefik.port: '7878'
      traefik.local.frontend.rule: 'Host:radarr.${LOCAL_DOMAIN:-localhost}'
      traefik.https.frontend.rule: 'Host:radarr.${DOMAIN:-default}'

  lidarr:
    image: linuxserver/lidarr:latest
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /home/ubuntu/config/lidarr:/config
      - ${ROOT}:/data
    ports:
      - 8686:8686
    restart: unless-stopped
    labels:
      <<: *default_traefik_opts
      traefik.backend: 'lidarr'
      traefik.port: '8686'
      traefik.local.frontend.rule: 'Host:lidarr.${LOCAL_DOMAIN:-localhost}'
      traefik.https.frontend.rule: 'Host:lidarr.${DOMAIN:-default}'

  bazarr:
    image: linuxserver/bazarr:latest
    restart: unless-stopped
    ports:
      - 6767:6767
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
      - TZ=${TZ} # timezone, defined in .env
    volumes:
      - /home/ubuntu/config/bazarr:/config
      - ${ROOT}/library:/library
    labels:
      <<: *default_traefik_opts
      traefik.backend: 'bazarr'
      traefik.port: '6767'
      traefik.local.frontend.rule: 'Host:bazarr.${LOCAL_DOMAIN:-localhost}'
      traefik.https.frontend.rule: 'Host:bazarr.${DOMAIN:-default}'

  organizr:
    image: organizrtools/organizr-v2:latest
    restart: unless-stopped
    ports:
      - 82:80
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
    volumes:
      - /home/ubuntu/config/organizr:/config
    labels:
      <<: *default_traefik_no_auth
      traefik.backend: 'organizr'
      traefik.port: '80'
      traefik.local.frontend.rule: 'Host:media.${LOCAL_DOMAIN:-localhost}'
      traefik.frontend.rule: 'Host:media.brudkaupid.com'

  media:
    image: organizrtools/organizr-v2:latest
    restart: unless-stopped
    ports:
      - 83:80
    environment:
      - PUID=${PUID} # default user id, defined in .env
      - PGID=${PGID} # default group id, defined in .env
    volumes:
      - /home/ubuntu/config/organizr:/config
    labels:
      - traefik.backend=organizr
      - traefik.frontend.rule=Host:media.brudkaupid.com
      - traefik.port=80

  plex-server:
    image: plexinc/pms-docker:latest
    restart: unless-stopped
    environment:
      - TZ=${TZ} # timezone, defined in .env
    network_mode: host # access on port 32400
    volumes:
      - /home/ubuntu/config/plex/db:/config # plex database
      - /home/ubuntu/config/plex/transcode:/transcode # temp transcoded files
      - ${ROOT}/library:/data # media library

  tautulli:
    image: linuxserver/tautulli
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - /home/ubuntu/config/tautulli:/config
      - ${ROOT}/logs/tautulli:/logs
    ports:
      - 8181:8181
    restart: unless-stopped
    labels:
      <<: *default_traefik_opts
      traefik.backend: 'tautulli'
      traefik.port: '8181'
      traefik.local.frontend.rule: 'Host:tautulli.${LOCAL_DOMAIN:-localhost}'
      traefik.https.frontend.rule: 'Host:tautulli.${DOMAIN:-default}'

  traefik:
    image: traefik:alpine
    restart: always
    command:
      --logLevel=info --entryPoints="Name:http Address::80" --defaultEntryPoints=https,http \
      --docker --docker.domain=${DOMAIN:-default} --docker.endpoint="unix:///var/run/docker.sock" \
      --docker.watch=true --docker.exposedbydefault=false \
      --api \
      --entryPoints="Name:https Address::443 TLS" \
      --acme=true --acme.entrypoint=https --acme.httpchallenge --acme.httpchallenge.entrypoint=http \
      --acme.domains=${DOMAIN:-default} --acme.email=${EMAIL:-default} --acme.storage=acme.json
    ports:
      - 80:80
      - 443:443
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - /home/ubuntu/config/traefik/acme.json:/acme.json
    labels:
      <<: *default_traefik_opts
      traefik.backend: 'traefik'
      traefik.port: '8080'
      traefik.local.frontend.rule: 'Host:traefik.${LOCAL_DOMAIN:-localhost}'
      traefik.https.frontend.rule: 'Host:traefik.${DOMAIN:-default}'
